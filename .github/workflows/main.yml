# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches: [ main ]
   paths-ignore:
    - 'process/**'

  pull_request:
    types: [opened, synchronize, reopened]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # prevent treating warnings as errors
  CI: false
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
#        Install from package-lock.json instead of checking package.json versions
#       - run: npm ci
#        For now... Until we start using npm instead of yarn
      - run: npm i --production
      - run: sed -i "s#PUBLIC_URL_TBD#/$CI_HEAD_REF_SLUG#g" ./package.json
      - run: npm run-script build --production
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v2.1.0
      - run: echo CI_HEAD_REF_SLUG ${CI_HEAD_REF_SLUG}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: aws s3 sync ./build s3://${{secrets.S3_BUCKET}}/${CI_HEAD_REF_SLUG}
      - run: aws s3 cp s3://${{secrets.S3_BUCKET}}/${CI_HEAD_REF_SLUG}/index.html  s3://${{secrets.S3_BUCKET}}/${CI_HEAD_REF_SLUG}/index.html --region ${{secrets.AWS_REGION}} --metadata-directive REPLACE --cache-control max-age=0 --content-type "text/html"
